--创建数据库文件 看廖雪峰-使用sqlite https://www.liaoxuefeng.com/wiki/897692888725344/926177394024864--
--SQL执行的顺序on是在join之前执行where是在前面两者之后执行

sql执行顺序
(1)from 
(2) on
(3) join  
(4) where 
(5)group by(开始使用select中的别名，后面的语句中都可以使用)
(6) 聚合 avg,sum.... 
(7)having 
(8) select 
(9) distinct 
(10) order by 
(11) top


时间函数：

时间戳转日期 from_unixtime(61) = '1970-01-01 00:01:01'
日期转时间戳 unix_timestamp('1970-01-01 00:01:01') = 61
时间转日期/年/月/日/小时/分钟/秒 to_date/year/month/day/hour/minute/second
转为具体年月日 to_date('2018-01-01 00:00:00') = '2018-01-01' 
转周 weekofyear
日期比较 datediff('2018-01-03','2018-01-01')  = 2
日期增加/减少 date_add/date_sub(日期,天数)

指定格式时，注意区分大小写
日期转时间戳 unix_timestamp('2018-01-01 00:00:00','yyyy-MM-dd HH:mm:ss')


--批量插入数据--
cur.execute(
    '''
    insert into Student values
    ('01' , '赵雷' , '1990-01-01' , '男')
    ,('02' , '钱电' , '1990-12-21' , '男')
    ,('03' , '孙风' , '1990-05-20' , '男')
    ,('04' , '李云' , '1990-08-06' , '男')
    ,('05' , '周梅' , '1991-12-01' , '女')
    ,('06' , '吴兰' , '1992-03-01' , '女')
    ,('07' , '郑竹' , '1989-07-01' , '女')
    ,('09' , '张三' , '2017-12-20' , '女')
    ,('10' , '李四' , '2017-12-25' , '女')
    ,('11' , '李四' , '2017-12-30' , '女')
    ,('12' , '赵六' , '2017-01-01' , '女')
    ,('13' , '孙七' , '2018-01-01' , '女');

    ''')

--建表--
cur.execute('''CREATE TABLE kanong_users (
        response INT, 
        topic INT, 
        nickname CHAR(30), 
        user_group CHAR(30), 
        register_time TIMESTAMP, 
        last_login_time TIMESTAMP,
        lacst_active_time TIMESTAMP, 
        friend INT,
        point INT, 
        achieve INT, 
        dollar INT,
        flower_coin INT, 
        uid INT
);''')


cur.execute('''CREATE TABLE wulai (
    name CHAR(30),
    phone CHAR(30),
    certificateNo CHAR(30),
    headPic CHAR(100),
    sex CHAR(30),
    age INT,
    homeAddress CHAR(100),
    province CHAR(30),
    city CHAR(30),
    createTime TIMESTAMP
);''')

    cur.execute('''CREATE TABLE zuanke (
            response INT, 
            topic INT, 
            nickname CHAR(30), 
            user_group CHAR(30), 
            register_time TIMESTAMP, 
            last_login_time TIMESTAMP,
            last_active_time TIMESTAMP,             
            point INT, 
            guo INT,
            friend INT,
            uid INT
    );''')

--csv转入sqlite--

df = pd.read_csv(r'C:\Users\chensheng\Desktop\kanong_users\kanong_users_extend_2019-07-08.csv')

--kanong
columns = [
    'response', 'topic', 
    'nickname', 'user_group', 
    'register_time', 'last_login_time',
    'lacst_active_time', 'friend',
    'point', 'achieve', 'dollar',
    'flower_coin', 'uid'
]

df.columns = columns

df.to_sql('kanong_users', conn, if_exists='append', index=False)

--天下无赖
columns = [
    'name',
    'phone',
    'personid',
    'headPic',
    'sex',
    'age',
    'homeAddress',
    'province',
    'city',
    'createTime'
]

--赚客
    columns = [
        'response', 'topic', 
        'nickname', 'user_group', 
        'register_time', 'last_login_time',
        'last_active_time', 'point', 'guo', 'friend','uid'
    ]

--查询所有表 
cur.execute("select name from sqlite_master where type='table' order by name")


--查询 按用户组 对应人数 20190501之后
    cur.execute(
        '''
        SELECT 
            strftime("%m", last_login_time) as month
            ,count(uid) AS aa
        FROM zuanke
        WHERE register_time > '2019-01-01 00:00:01'
        GROUP BY month
        ORDER BY month ASC
        ''')


    cur.execute('''
        select
            age, 
            count(name)
            --,createtime
            --,count(personid) as aa
        from 
        where createtime > '2017/1/1 00:00:01'
        group by age
        --order by aa ASC
    ''')


--查表内字段
    cur.execute(
        '''
        PRAGMA table_info(zuanke)
        ''')
